name: Test, Build & Deploy Production

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  unit-test-prod:
    runs-on: [ self-hosted, linux, x64, earable-backend ]
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        export APP_NAME="<< TO DO >>"
        export GITHUB_SHORT_SHA="$(echo $GITHUB_SHA | cut -c1-8)"
        export APP_IMAGE_NAME="$GITLAB_REGISTRY/$APP_NAME:$GITHUB_REF_NAME-$GITHUB_SHORT_SHA"
        docker build -t $APP_IMAGE_NAME -f Dockerfile.test .
  build-docker-prod:
    needs: unit-test-prod
    runs-on: [ self-hosted, linux, x64, earable-backend ]
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        export APP_NAME="<< TO DO >>"
        export GITHUB_SHORT_SHA="$(echo $GITHUB_SHA | cut -c1-8)"
        export APP_IMAGE_NAME="$GITLAB_REGISTRY/$APP_NAME:$GITHUB_REF_NAME-$GITHUB_SHORT_SHA"
        docker build -t $APP_IMAGE_NAME .
        docker push $APP_IMAGE_NAME
  deploy-k8s-prod:
    needs: build-docker-prod
    runs-on: [ self-hosted, linux, x64, earable-backend ]
    steps:
    - uses: actions/checkout@v2
    - name: Sync Commit to K8s Gitops
      run: |
        export APP_NAME="<< TO DO >>"
        export VERSION="v1.0"
        curl --compressed -sS -H 'Connection: keep-alive' -u "${WEBHOOKD_BASIC_AUTH}" "${WEBHOOKD_URL}?application=${APP_NAME}&branch=${GITHUB_REF_NAME}&commit=${GITHUB_SHA}&version=${VERSION}"  &> /dev/stdout | tee -a /tmp/status
  post-test-prod:
    needs: deploy-k8s-prod
    runs-on: [ self-hosted, linux, x64, earable-backend ]
    steps:
    - uses: actions/checkout@v2
    - name: Run Post Test
      run: |
        sleep 30
        export HEALTHCHECK_URL="<< TO DO >>"
        curl --compressed -sS -H 'Connection: keep-alive' "${HEALTHCHECK_URL}" &> /dev/stdout | tee -a /tmp/status
